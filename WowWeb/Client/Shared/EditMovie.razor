@inject IGenreService _genreService
@inject IMovieService _movieService
@inject IJSRuntime _js

<EditForm Model="Movie" OnSubmit="OnSubmit">
    <div class="form-group">
        <label>Название</label>
        <InputText class="form-control" @bind-Value="Movie.Title"></InputText>
    </div>
    <div class="form-group">
        <label>О фильме</label>
        <InputTextArea class="form-control" @bind-Value="Movie.Description"></InputTextArea>
    </div>
    <div class="form-group">
        <label>Рейтинг</label>
        <InputNumber class="form-control" @bind-Value="Movie.Rating"></InputNumber>
    </div>
    <div class="form-group">
        <label>Жанр</label>
        <InputSelect class="form-control" @bind-Value="genreId">
            @foreach (var genre in _genreService.Genres)
            {
                <option value="@genre.Id">@genre.Name</option>
            }
        </InputSelect>
    </div>
    <br />
    <button type="submit" class="btn btn-success float-xl-right">Подтвердить</button>
</EditForm>

@code {
    [Parameter]
    public Movie Movie { get; set; } = new();

    int genreId = 0;

    protected override async Task OnInitializedAsync()
    {
        await _genreService.GetGenres();
    }

    async void OnSubmit()
    {
        await _js.InvokeVoidAsync("console.log", Movie);

        Movie.Genre = _genreService.Genres.FirstOrDefault(g => g.Id == genreId);
        if(Movie.Id == 0)
        {
            Console.WriteLine("CREATE");
            await _movieService.AddMovie(Movie);
        }
        else
        {
            Console.WriteLine("UPDATE");
            await _movieService.UpdateMovie(Movie);
        }
    }
}
